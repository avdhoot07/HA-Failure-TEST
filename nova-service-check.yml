##NOVA services down on Controller 2 & 3

- hosts: controller-1-2
  gather_facts: yes
  remote_user: root
  tasks:
  - name: Nova services down on Controller 1 and 2
    shell: for i in `cd /etc/init.d/ ; ls nova-*`; do service $i stop; done
    ignore_errors: yes
    register: png
  - debug: var=png.stdout

##############Run Tempest test for Instance launch  

- hosts: tempest
  gather_facts: yes
  remote_user: root
  tags: interfaceup
  tasks:

  - name: Tempest check
    shell: bash /root/script-instance-tempst.sh
    ignore_errors: yes
    register: png
  - debug: var=png.stdout
  - pause: prompt="Verify if tempest is PASSED, press ENTER to continue"

###NOVA services UP on Controller

- hosts: controller-1-2
  gather_facts: yes
  remote_user: root
  tags: novaserviceup
  tasks:
  - name: Nova services UP on Controller 2 and 3
    shell: for i in `cd /etc/init.d/ ; ls nova-*`; do service $i start; done
    ignore_errors: yes
    register: png
  - debug: var=png.stdout
  - pause: prompt="Pausing for nova service to come up on nodes" seconds=20

###Nova services down on Controller 1 & 3

- hosts: controller-1-3
  gather_facts: yes
  remote_user: root
  tags: novaservicedown
  tasks:
  - name: Nova down on Controller 1 and 3
    shell: for i in `cd /etc/init.d/ ; ls nova-*`; do service $i stop; done
    ignore_errors: yes
    register: png
  - debug: var=png.stdout

##############Run Tempest test for Instance launch

- hosts: tempest
  gather_facts: yes
  remote_user: root
  tags: interfaceup
  tasks:

  - name: Tempest check
    shell: bash /root/script-instance-tempst.sh
    ignore_errors: yes
    register: png
  - debug: var=png.stdout
  - pause: prompt="Verify if tempest is PASSED, press ENTER to continue"

####Nova services UP on Controller 1 & 3

- hosts: controller-1-3
  gather_facts: yes
  remote_user: root
  tags: novaserviceup
  tasks:
  - name: Nova services UP on Controller 1 and 3
    shell: for i in `cd /etc/init.d/ ; ls nova-*`; do service $i start; done
    ignore_errors: yes
    register: png
  - debug: var=png.stdout
  - pause: prompt="Pausing for nova service to come up on nodes" seconds=20

####Nova services down on Controller 2 & 3

- hosts: controller-serviceverify-2-3
  gather_facts: yes
  remote_user: root
  tags: novaservicedown
  tasks:
  - name: Nova down on Controller 2 & 3
    shell: for i in `cd /etc/init.d/ ; ls nova-*`; do service $i stop; done
    ignore_errors: yes
    register: png
  - debug: var=png.stdout

###Run Tempest test for Instance launch

- hosts: tempest
  gather_facts: yes
  remote_user: root
  tags: interfaceup
  tasks:
  - name: Tempest check
    shell: bash /root/script-instance-tempst.sh
    ignore_errors: yes
    register: png
  - debug: var=png.stdout
  - pause: prompt="Verify if tempest is PASSED, press ENTER to continue"

#####Nova services UP on Controller 1 & 2

- hosts: controller-2-3
  gather_facts: yes
  remote_user: root
  tags: novaserviceup
  tasks:
  - name: Nova services UP on Controller 2 and 3
    shell: for i in `cd /etc/init.d/ ; ls nova-*`; do service $i start; done
    ignore_errors: yes
    register: png
  - debug: var=png.stdout
  - pause: prompt="Pausing for nova service to come up on nodes" seconds=20

#####Verify nova service on all controller nodes

- hosts: controllers-1-2-3
  gather_facts: yes
  remote_user: root
  tags: novaserviceup
  tasks:
  - name: Verify nova service on all controller nodes
    shell: for i in `cd /etc/init.d/ ; ls nova-*`; do service $i status; done
    ignore_errors: yes
    register: png
  - debug: var=png.stdout
